<!--
  example requires some changes to your config:

  ```
  // tailwind.config.js
  module.exports = {
    // ...
    plugins: [
      // ...
      require('@tailwindcss/typography'),
      require('@tailwindcss/aspect-ratio'),
    ],
  }
  ```
-->
<div class='mx-auto max-w-7xl p-4 sm:p-6 lg:p-8'>
  <div class='lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-8'>
    <!-- Image gallery -->
    <div class='flex flex-col-reverse'>
      {% if product.images.size > 1 %}
        <!-- Image selector -->
        <div class='mx-auto mt-6 hidden w-full max-w-2xl sm:block lg:max-w-none'>
          <div
            class='grid grid-cols-4 gap-6'
            aria-orientation='horizontal'
            role='tablist'
          >
            {% for image in product.images %}
              <button
                id='tabs-1-tab-1'
                class='relative flex h-32 cursor-pointer items-center justify-center rounded-md bg-white text-sm font-medium uppercase text-gray-900 hover:bg-gray-50 focus:outline-none focus:ring focus:ring-opacity-50 focus:ring-offset-4'
                aria-controls='tabs-1-panel-1'
                role='tab'
                type='button'
              >
                <span class='sr-only'>Alternate view</span>
                <span class='absolute inset-0 overflow-hidden rounded-md'>
                  <img
                    src='{{ image |  image_url: width: 250 }}'
                    alt='{{ image.alt }}'
                    class='h-full w-full object-cover'
                  >
                </span>
                <!--
                  Selected: "ring-indigo-500", Not Selected: "ring-transparent"
                -->
                <span
                  class='ring-transparent pointer-events-none absolute inset-0 rounded-md ring-2 ring-offset-2'
                  aria-hidden='true'
                ></span>
              </button>
            {% endfor %}
          </div>
        </div>
      {% endif %}

      <div class='aspect-h-1 aspect-w-1 w-full'>
        <!-- Tab panel, show/hide based on tab state. -->
        <div
          id='tabs-1-panel-1'
          aria-labelledby='tabs-1-tab-1'
          role='tabpanel'
          tabindex='0'
        >
          <img
            src='{{ product.images[0] |  image_url: width: 800 }}'
            alt='{{ product.images[0].alt }}'
            class='h-full w-full object-cover object-center rounded-lg'
          >
        </div>

        <!-- More images... -->
      </div>
    </div>

    <!-- Product info -->
    <div class='mt-10 px-0.5 sm:mt-16 sm:px-0 lg:mt-0'>
      <h1 class='text-3xl font-bold tracking-tight text-gray-900'>
        {{ product.title }}
      </h1>

      <div class='mt-3'>
        <h2 class='sr-only'>Product information</h2>
        <p class='text-3xl tracking-tight text-gray-900' id='product-price'>
          {{ product.selected_or_first_available_variant.price | money }}
        </p>
      </div>

      <div class='mt-6'>
        <h3 class='sr-only'>Description</h3>

        <div class='space-y-6 text-base text-gray-700'>
          {% render 'prose', content: product.content %}
        </div>
      </div>

      {% form 'product', product, class: 'mt-6' %}
        <input
          type='hidden'
          name='product-id'
          id='product-id'
          value='{{ product.selected_or_first_available_variant }}'
          data-url='{{ product.url }}'
        >

        {% unless product.has_only_default_variant %}
          <div class='product-option'>
            {%- for option in product.options_with_values -%}
              <fieldset>
                <legend>
                  {{ option.name }}
                </legend>
                {% for value in option.values %}
                  <div>
                    <input
                      {% if option.selected_value == value %}
                        checked
                      {% endif %}
                      type='radio'
                      name='{{ option.name }}'
                      value='{{ value }}'
                      id='{{ option.name |  handleize }}-{{ value |  handleize }}'
                    >
                    <label for="'{{ option.name |  handleize }}-{{ value |  handleize }}'">
                      {{ value }}
                    </label>
                  </div>
                {% endfor %}
              </fieldset>
            {%- endfor -%}
          </div>
        {% endunless %}
        <div class='mt-10 flex'>
          {% comment %} Quantity select {% endcomment %}

          {% comment %} Add to bag button {% endcomment %}
          <button
            type='submit'
            class='flex max-w-xs flex-1 items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-50 sm:w-full'
          >
            Add to bag
          </button>
        </div>
      {% endform %}
    </div>
  </div>
</div>

<script>
  const product = {{ product | json }}

  const radioInputs = document.querySelectorAll('.product-option input[type="radio"]')
  radioInputs.forEach((radio) => (
    radio.addEventListener('change', () => {
      const selectedOptions = []

      const checkedInputs = document.querySelectorAll('.product-option input[type="radio"]:checked')
      checkedInputs.forEach((checked) => (
        selectedOptions.push(checked.value)
      ))

      const matchedVariant = product.variants.find(variant => {
        let pass = true;

        for (let i = 0; i < selectedOptions.length; i++) {
          if (selectedOptions.indexOf(variant.options[i]) === -1) {
            pass = false;
            break;
          }
        }

        return pass;
      })

      const hiddenInput = document.querySelector('#product-id')
      hiddenInput.value = matchedVariant.id
      
      window.history.replaceState({}, '', `${hiddenInput.dataset.url}?variant=${matchedVariant.id}`)

      document.querySelector('#product-price').textContent = formatPrice(matchedVariant.price)
    })
  ))
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
