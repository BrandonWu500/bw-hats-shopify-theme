<!--
  This example requires some changes to your config:

  ```
  // tailwind.config.js
  module.exports = {
    // ...
    plugins: [
      // ...
      require('@tailwindcss/forms'),
    ],
  }
  ```
-->
<div
  class='bg-white'
  data-money-format='{{ shop.money_format }}'
>
  <div class='mx-auto max-w-2xl px-4 pb-24 pt-16 sm:px-6 lg:max-w-7xl lg:px-8'>
    {% if cart.item_count > 0 %}
      <div class='flex w-full justify-between'>
        <h1 class='text-3xl font-semibold font-heading tracking-tight text-slate-700 sm:text-4xl'>
          Shopping Bag
        </h1>
        <button
          id='clear-cart-button'
          class='relative flex items-center justify-center rounded-md border border-transparent bg-slate-100 px-4 sm:px-8 py-2 text-sm font-medium text-slate-700 hover:bg-slate-200'
        >
          Clear Cart
        </button>
      </div>
      <form
        class='mt-12 lg:grid lg:grid-cols-12 lg:items-start lg:gap-x-12 xl:gap-x-16'
        action='{{ routes.cart_url }}'
        method='post'
        id='cart'
      >
        <section aria-labelledby='cart-heading' class='lg:col-span-7'>
          <h2 id='cart-heading' class='sr-only'>Items in your shopping cart</h2>
          <ul
            role='list'
            class='divide-y divide-slate-200 border-b border-t border-slate-200'
          >
            {% for item in cart.items %}
              <li
                class='cart-item flex py-6 sm:py-10'
                data-key='{{ item.key }}'
              >
                <div class='flex-shrink-0'>
                  <img
                    srcset='
                      {{ item.image | image_url: width: 200 }} 200w,
                      {{ item.image | image_url: width: 300 }} 300w
                    '
                    src='{{ item.image | image_url: width: 300 }}'
                    alt='{{ item.image.alt }}'
                    class='h-full w-24 rounded-md object-cover object-center sm:h-48 sm:w-48'
                    sizes='
                      (max-width: 425px) 200px,
                      300px
                    '
                    width='{{ item.image.width }}'
                    height='{{ item.image.height }}'
                  >
                </div>

                <div class='ml-4 flex flex-1 flex-col justify-between sm:ml-6'>
                  <div class='relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0'>
                    <div>
                      <div class='flex justify-between'>
                        <h3 class='text-xl'>
                          <a
                            href='{{ item.url }}'
                            class='font-heading font-semibold text-slate-600 hover:text-slate-700'
                          >
                            {{ item.product.title | escape }}
                          </a>
                        </h3>
                      </div>
                      {%- unless item.product.has_only_default_variant -%}
                        {% comment %}
                          <dl class='mt-1 flex flex-col'>
                            {%- for option in item.options_with_values -%}
                              <div class='flex items-center gap-4 text-lg text-slate-600'>
                                <dt class=''>{{ option.name }}:</dt>
                                <dd class='font-medium'>
                                  {{ option.value }}
                                </dd>
                              </div>
                            {%- endfor -%}
                          </dl>
                        {% endcomment %}
                        <div class='mt-1 flex text-lg'>
                          <p class='text-slate-500'>{{ item.variant.title }}</p>
                        </div>
                      {%- endunless -%}
                      <p
                        class='line-item-price mt-1 text-lg font-medium text-slate-700'
                      >
                        {{ item.final_line_price | money }}
                      </p>
                    </div>

                    <div class='mt-4 sm:mt-0 sm:pr-9'>
                      <label for='updates_{{ item.key }}' class='sr-only'
                        >Quantity, {{ item.product.title | escape -}}
                      </label>
                      <select
                        data-key='{{ item.key }}'
                        id='updates_{{ item.key }}'
                        name='updates[]'
                        value='{{ item.quantity }}'
                        class='quantity-select max-w-full rounded-md border border-slate-300 py-1.5 text-left text-base font-medium leading-5 text-slate-700 shadow-sm focus:border-orange-200 focus:outline-none focus:ring-1 focus:ring-orange-200'
                      >
                        {% if item.variant.inventory_quantity > 0 %}
                          {% assign num = item.variant.inventory_quantity %}
                        {% else %}
                          {% assign num = 10 %}
                        {% endif %}
                        {% assign range = (1..num) %}
                        {% for i in range %}
                          <option
                            value='{{ i }}'
                            {% if item.quantity == i %}
                              selected
                            {% endif %}
                          >
                            {{ i }}
                          </option>
                        {% endfor %}
                      </select>

                      <div class='absolute right-0 top-0'>
                        <button
                          class='remove-cart-item -m-2 inline-flex p-2 text-slate-400 hover:text-slate-500'
                        >
                          <span class='sr-only'>Remove</span>
                          <svg
                            class='h-8 w-8'
                            viewBox='0 0 20 20'
                            fill='currentColor'
                            aria-hidden='true'
                          >
                            <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
                          </svg>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </li>
            {% endfor %}
          </ul>
        </section>

        <!-- Order summary -->
        <section
          aria-labelledby='summary-heading'
          class='mt-16 rounded-lg bg-orange-200 px-4 py-6 sm:p-6 lg:col-span-5 lg:mt-0 lg:p-8'
        >
          <h2 id='summary-heading' class='sr-only'>Order summary</h2>

          <div>
            <dl class='space-y-4'>
              <div class='flex items-center justify-between'>
                <dt class='text-xl font-semibold font-heading text-slate-700'>
                  Subtotal
                </dt>
                <dd
                  class='ml-4 text-xl font-medium text-slate-700'
                  id='cart-total-price'
                >
                  {{ cart.total_price | money }}
                </dd>
              </div>
            </dl>
            <p class='mt-4 text-slate-600'>
              Shipping and taxes will be calculated at checkout.
            </p>
          </div>

          <div class='mt-10'>
            <div class='my-2'>
              <button
                type='submit'
                name='update'
                class='hidden'
                id='cart-update-button'
              >
                Update
              </button>
            </div>
            <button
              type='submit'
              name='checkout'
              class='w-full rounded-md border border-transparent bg-slate-600 px-4 py-3 text-base font-semibold font-heading text-orange-200 shadow-sm hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 focus:ring-offset-slate-50'
            >
              Checkout
            </button>
          </div>

          <div class='mt-6 text-center text-sm'>
            <p>
              or
              <a
                href='/'
                class='font-medium text-slate-600 hover:text-slate-500'
              >
                Continue Shopping
                <span aria-hidden='true'> &rarr;</span>
              </a>
            </p>
          </div>
        </section>
      </form>
    {% else %}
      {% render 'empty-cart' %}
    {% endif %}
  </div>
</div>

<script
  src='https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.1/axios.min.js'
  integrity='sha512-m9S8W3a9hhBHPFAbEIaG7J9P92dzcAWwM42VvJp5n1/M599ldK6Z2st2SfJGsX0QR4LfCVr681vyU5vW8d218w=='
  crossorigin='anonymous'
  referrerpolicy='no-referrer'
></script>
<script>
  const clearCartButton = document.querySelector('#clear-cart-button');
  if (clearCartButton) {
    clearCartButton.addEventListener('click', async () => {
      try {
        await axios.post('/cart/clear.js');
        window.location.reload();
      } catch (error) {
        consle.error(error);
      }
    });
  }

  function changeItemQuantity(key, quantity) {
    axios
      .post('/cart/change.js', {
        id: key,
        quantity,
      })
      .then((res) => {
        const format = document
          .querySelector('[data-money-format]')
          .getAttribute('data-money-format');

        const totalPrice = res.data.total_price;
        const totalItemCount = res.data.item_count;
        const item = res.data.items.find((item) => item.key === key);
        const itemPrice = item.final_line_price;

        document.querySelector('#cart-total-price').textContent = formatMoney(
          totalPrice,
          format
        );
        document.querySelector(
          `[data-key="${key}"] .line-item-price`
        ).textContent = formatMoney(itemPrice, format);
        document.querySelector('#header-cart-item-count').textContent =
          totalItemCount;
      });
  }

  const selects = document.querySelectorAll('.quantity-select');
  const cartUpdateButton = document.querySelector('#cart-update-button');
  selects.forEach((select) => {
    select.addEventListener('change', () => {
      // cartUpdateButton.click();
      changeItemQuantity(select.dataset.key, Number(select.value));
    });
  });

  const removeItemButtons = document.querySelectorAll('.remove-cart-item');
  removeItemButtons.forEach((button) => {
    button.addEventListener('click', (event) => {
      event.preventDefault();

      const item = button.closest('.cart-item');
      const key = item.dataset.key;

      axios
        .post('/cart/change.js', {
          id: key,
          quantity: 0,
        })
        .then((res) => {
          if (res.data.items.length === 0) {
            window.location.reload();
          } else {
            item.remove();

            const format = document
              .querySelector('[data-money-format]')
              .getAttribute('data-money-format');

            const totalPrice = res.data.total_price;
            const totalItemCount = res.data.item_count;

            document.querySelector('#cart-total-price').textContent =
              formatMoney(totalPrice, format);
            document.querySelector('#header-cart-item-count').textContent =
              totalItemCount;
          }
        });
    });
  });
</script>

{% schema %}
{
  "name": "Template Cart",
  "blocks": [
    {
      "type": "subtotal",
      "name": "Subtotal",
      "limit": 1
    },
    {
      "type": "update_button",
      "name": "Update Button",
      "limit": 1
    },
    {
      "type": "checkout_button",
      "name": "Checkout Button",
      "limit": 1
    }
  ]
}
{% endschema %}
